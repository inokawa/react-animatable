/*! For license information please see hooks-useTransitionAnimation-stories.8c251dde.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_animatable=self.webpackChunkreact_animatable||[]).push([[480],{"./stories/hooks/useTransitionAnimation.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Alphabet:()=>Alphabet,Expand:()=>Expand,Input:()=>Input,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/index.ts");const __WEBPACK_DEFAULT_EXPORT__={parameters:{storySource:{source:'import { StoryObj } from "@storybook/react";\nimport React, { useEffect, useRef, useState } from "react";\nimport {\n  TransitionGroup,\n  AnimationOptions,\n  useTransitionAnimation,\n} from "../../src";\n\nexport default { component: useTransitionAnimation };\n\nconst usePrevious = <T,>(value: T) => {\n  const prev = useRef(value);\n  useEffect(() => {\n    prev.current = value;\n  }, [value]);\n  return prev.current;\n};\n\nconst Text = ({ children }: { children: string }) => {\n  const prev = usePrevious(children);\n\n  const timing = { duration: 800, easing: "ease-out" };\n  const animate = useTransitionAnimation({\n    enter: [\n      [\n        { transform: "translateY(-20px)", opacity: 0.2 },\n        { transform: "translateY(0px)", opacity: 1 },\n      ],\n      timing,\n    ],\n    exit: [\n      [\n        { transform: "translateY(0px)", opacity: 1 },\n        { transform: "translateY(20px)", opacity: 0.2 },\n      ],\n      timing,\n    ],\n    update: [\n      [{ transform: "rotateX(360deg)" }, { transform: "rotateX(0deg)" }],\n      children !== prev ? timing : undefined,\n    ],\n  });\n\n  return (\n    <span\n      ref={animate}\n      style={{ display: "inline-block", whiteSpace: "pre", fontSize: 32 }}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport const Input: StoryObj = {\n  render: () => {\n    const [value, setValue] = useState("Animation");\n    return (\n      <div style={{ margin: 20 }}>\n        <div style={{ marginBottom: 100 }}>\n          <input value={value} onChange={(e) => setValue(e.target.value)} />\n        </div>\n        <div>\n          <TransitionGroup>\n            {value.split("").map((t, i) => (\n              <Text key={i}>{t}</Text>\n            ))}\n          </TransitionGroup>\n        </div>\n      </div>\n    );\n  },\n};\n\nconst shuffle = <T,>(array: T[]): T[] => {\n  for (let i = array.length - 1; i >= 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nconst SvgText = ({ children, i }: { children: string; i: number }) => {\n  const x = i * 20;\n  const prevX = usePrevious(x);\n  const timing = { duration: 800, easing: "ease-in-out" };\n  const transition = useTransitionAnimation({\n    update: [\n      (prev) => [\n        { fill: prev.fill, transform: `translateX(${prevX - x}px)` },\n        { fill: "#333", transform: `translateX(0px)` },\n      ],\n      timing,\n    ],\n    enter: [\n      [\n        { fill: "green", fillOpacity: "0", transform: "translateY(-20px)" },\n        { fill: "green", fillOpacity: "1", transform: "translateY(0px)" },\n      ],\n      timing,\n    ],\n    exit: [\n      { fill: "brown", fillOpacity: "0", transform: "translateY(20px)" },\n      timing,\n    ],\n  });\n\n  return (\n    <text ref={transition} x={x} y={0} fill="#333">\n      {children}\n    </text>\n  );\n};\n\nconst ALPHABETS = "abcdefghijklmnopqrstuvwxyz".split("");\n\nexport const Alphabet: StoryObj = {\n  render: () => {\n    const [texts, setTexts] = useState(ALPHABETS);\n    useEffect(() => {\n      const id = setInterval(() => {\n        const shuffled = shuffle(ALPHABETS)\n          .slice(0, Math.floor(Math.random() * 26))\n          .sort();\n        setTexts(shuffled);\n      }, 1000);\n      return () => {\n        clearInterval(id);\n      };\n    }, []);\n\n    return (\n      <>\n        <svg width={600} height={400}>\n          <g transform={`translate(${25},${50})`}>\n            <TransitionGroup>\n              {texts.map((t, i) => (\n                <SvgText key={t} i={i}>\n                  {t}\n                </SvgText>\n              ))}\n            </TransitionGroup>\n          </g>\n        </svg>\n        <style>{`text { font: bold 28px monospace; }`}</style>\n      </>\n    );\n  },\n};\n\nconst ExpandRect = ({ i, length }: { i: number; length: number }) => {\n  const timing: AnimationOptions = {\n    easing: "ease-in-out",\n    direction: "alternate",\n    duration: 1000,\n  };\n\n  const startStyle = (s: CSSStyleDeclaration, defaultScale: number) => {\n    const transform = s.transform;\n    const scale =\n      transform.slice("matrix".length + 1, transform.indexOf(",") - 1) ||\n      defaultScale;\n    return {\n      backgroundColor: s.backgroundColor,\n      transform: `scale(${scale})`,\n      opacity: s.opacity,\n    };\n  };\n\n  const transition = useTransitionAnimation({\n    enter: [\n      (prev) => [\n        startStyle(prev, 0),\n        { backgroundColor: "skyblue", transform: "scale(1)", opacity: 1 },\n      ],\n      { ...timing, delay: i * 100 },\n    ],\n    exit: [\n      (prev) => [\n        startStyle(prev, 1),\n        {\n          backgroundColor: "limegreen",\n          transform: "scale(0)",\n          opacity: 0,\n        },\n      ],\n      { ...timing, delay: (length - i) * 100 },\n    ],\n  });\n\n  return (\n    <div\n      ref={transition}\n      style={{\n        width: "100px",\n        height: "100px",\n        background: "#efefff",\n        margin: 4,\n        backgroundColor: "limegreen",\n        transform: "scale(0)",\n        opacity: 0,\n      }}\n    />\n  );\n};\n\nexport const Expand: StoryObj = {\n  render: () => {\n    const [expanded, setExpanded] = useState(true);\n    const length = 16;\n    const [rects] = useState(() => Array.from({ length }).map((_, i) => i));\n\n    return (\n      <>\n        <button\n          onClick={() => setExpanded((prev) => !prev)}\n          style={{ marginBottom: 10 }}\n        >\n          {expanded ? "close" : "open"}\n        </button>\n        <div\n          style={{\n            background: "whitesmoke",\n            width: "500px",\n            height: "500px",\n            display: "flex",\n            alignItems: "flex-start",\n            justifyContent: "flex-start",\n            flexWrap: "wrap",\n            alignContent: "flex-start",\n          }}\n        >\n          <TransitionGroup>\n            {expanded\n              ? rects.map((i) => <ExpandRect key={i} i={i} length={length} />)\n              : []}\n          </TransitionGroup>\n        </div>\n      </>\n    );\n  },\n};\n',locationsMap:{input:{startLoc:{col:31,line:54},endLoc:{col:1,line:72},startBody:{col:31,line:54},endBody:{col:1,line:72}},alphabet:{startLoc:{col:34,line:116},endLoc:{col:1,line:148},startBody:{col:34,line:116},endBody:{col:1,line:148}},expand:{startLoc:{col:32,line:206},endLoc:{col:1,line:241},startBody:{col:32,line:206},endBody:{col:1,line:241}}}}},component:_src__WEBPACK_IMPORTED_MODULE_1__.useTransitionAnimation},usePrevious=value=>{const prev=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{prev.current=value}),[value]),prev.current},Text=({children})=>{const prev=usePrevious(children),timing={duration:800,easing:"ease-out"},animate=(0,_src__WEBPACK_IMPORTED_MODULE_1__.useTransitionAnimation)({enter:[[{transform:"translateY(-20px)",opacity:.2},{transform:"translateY(0px)",opacity:1}],timing],exit:[[{transform:"translateY(0px)",opacity:1},{transform:"translateY(20px)",opacity:.2}],timing],update:[[{transform:"rotateX(360deg)"},{transform:"rotateX(0deg)"}],children!==prev?timing:void 0]});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("span",{ref:animate,style:{display:"inline-block",whiteSpace:"pre",fontSize:32}},children)},Input={render:()=>{const[value,setValue]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)("Animation");return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{margin:20}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{marginBottom:100}},react__WEBPACK_IMPORTED_MODULE_0__.createElement("input",{value,onChange:e=>setValue(e.target.value)})),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_1__.TransitionGroup,null,value.split("").map(((t,i)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(Text,{key:i},t))))))}},SvgText=({children,i})=>{const x=20*i,prevX=usePrevious(x),timing={duration:800,easing:"ease-in-out"},transition=(0,_src__WEBPACK_IMPORTED_MODULE_1__.useTransitionAnimation)({update:[prev=>[{fill:prev.fill,transform:`translateX(${prevX-x}px)`},{fill:"#333",transform:"translateX(0px)"}],timing],enter:[[{fill:"green",fillOpacity:"0",transform:"translateY(-20px)"},{fill:"green",fillOpacity:"1",transform:"translateY(0px)"}],timing],exit:[{fill:"brown",fillOpacity:"0",transform:"translateY(20px)"},timing]});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("text",{ref:transition,x,y:0,fill:"#333"},children)},ALPHABETS="abcdefghijklmnopqrstuvwxyz".split(""),Alphabet={render:()=>{const[texts,setTexts]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(ALPHABETS);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{const id=setInterval((()=>{const shuffled=(array=>{for(let i=array.length-1;i>=0;i--){const j=Math.floor(Math.random()*(i+1));[array[i],array[j]]=[array[j],array[i]]}return array})(ALPHABETS).slice(0,Math.floor(26*Math.random())).sort();setTexts(shuffled)}),1e3);return()=>{clearInterval(id)}}),[]),react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg",{width:600,height:400},react__WEBPACK_IMPORTED_MODULE_0__.createElement("g",{transform:"translate(25,50)"},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_1__.TransitionGroup,null,texts.map(((t,i)=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(SvgText,{key:t,i},t)))))),react__WEBPACK_IMPORTED_MODULE_0__.createElement("style",null,"text { font: bold 28px monospace; }"))}},ExpandRect=({i,length})=>{const timing={easing:"ease-in-out",direction:"alternate",duration:1e3},startStyle=(s,defaultScale)=>{const transform=s.transform,scale=transform.slice(7,transform.indexOf(",")-1)||defaultScale;return{backgroundColor:s.backgroundColor,transform:`scale(${scale})`,opacity:s.opacity}},transition=(0,_src__WEBPACK_IMPORTED_MODULE_1__.useTransitionAnimation)({enter:[prev=>[startStyle(prev,0),{backgroundColor:"skyblue",transform:"scale(1)",opacity:1}],{...timing,delay:100*i}],exit:[prev=>[startStyle(prev,1),{backgroundColor:"limegreen",transform:"scale(0)",opacity:0}],{...timing,delay:100*(length-i)}]});return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{ref:transition,style:{width:"100px",height:"100px",background:"#efefff",margin:4,backgroundColor:"limegreen",transform:"scale(0)",opacity:0}})},Expand={render:()=>{const[expanded,setExpanded]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!0),[rects]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)((()=>Array.from({length:16}).map(((_,i)=>i))));return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("button",{onClick:()=>setExpanded((prev=>!prev)),style:{marginBottom:10}},expanded?"close":"open"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{background:"whitesmoke",width:"500px",height:"500px",display:"flex",alignItems:"flex-start",justifyContent:"flex-start",flexWrap:"wrap",alignContent:"flex-start"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(_src__WEBPACK_IMPORTED_MODULE_1__.TransitionGroup,null,expanded?rects.map((i=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(ExpandRect,{key:i,i,length:16}))):[])))}}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./src/core/index.ts":()=>{},"./src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{TransitionGroup:()=>_react__WEBPACK_IMPORTED_MODULE_1__.TransitionGroup,useAnimation:()=>_react__WEBPACK_IMPORTED_MODULE_1__.useAnimation,useAnimationFunction:()=>_react__WEBPACK_IMPORTED_MODULE_1__.useAnimationFunction,useTransitionAnimation:()=>_react__WEBPACK_IMPORTED_MODULE_1__.useTransitionAnimation});var _core__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/core/index.ts");__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__,"TransitionGroup")&&__webpack_require__.d(__webpack_exports__,{TransitionGroup:function(){return _core__WEBPACK_IMPORTED_MODULE_0__.TransitionGroup}}),__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__,"useAnimation")&&__webpack_require__.d(__webpack_exports__,{useAnimation:function(){return _core__WEBPACK_IMPORTED_MODULE_0__.useAnimation}}),__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__,"useAnimationFunction")&&__webpack_require__.d(__webpack_exports__,{useAnimationFunction:function(){return _core__WEBPACK_IMPORTED_MODULE_0__.useAnimationFunction}}),__webpack_require__.o(_core__WEBPACK_IMPORTED_MODULE_0__,"useTransitionAnimation")&&__webpack_require__.d(__webpack_exports__,{useTransitionAnimation:function(){return _core__WEBPACK_IMPORTED_MODULE_0__.useTransitionAnimation}});var _react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/react/index.ts")},"./src/react/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{TransitionGroup:()=>TransitionGroup,useAnimation:()=>useAnimation,useAnimationFunction:()=>useAnimationFunction,useTransitionAnimation:()=>useTransitionAnimation});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js");const utils_getKeys=Object.keys,utils_assign=Object.assign,isArray=Array.isArray,isSameObject=(target={},prev={})=>{const keys=utils_getKeys(target);return keys.length===utils_getKeys(prev).length&&keys.every((k=>target[k]===prev[k]))},toMap=elements=>elements.reduce(((acc,e,i)=>(acc[e.key||i]=e,acc)),{}),TransitionStateContext=(0,react.createContext)("update"),TransitionNotifierContext=(0,react.createContext)((()=>{})),Provider=({_state:state,_element:element})=>{const[show,setShow]=(0,react.useState)(!0),hasExitRef=(0,react.useRef)(!1),showChildren="exit"!==state||!!hasExitRef.current&&show;return(0,react.useEffect)((()=>{"enter"===state&&setShow(!0)}),[state]),(0,jsx_runtime.jsx)(TransitionStateContext.Provider,{value:state,children:(0,jsx_runtime.jsx)(TransitionNotifierContext.Provider,{value:(0,react.useCallback)((s=>{2===s?setShow(!1):hasExitRef.current=1===s}),[]),children:showChildren?element:null})})},TransitionGroup=({children})=>{const elemsRef=(0,react.useRef)(null),prevElems=elemsRef.current||[],elems=react.Children.map(children,(c=>c));(0,react.useEffect)((()=>{elemsRef.current=elems}));const elemsByKey=toMap(elems),prevElemsByKey=toMap(prevElems),res=[];return prevElems.forEach(((v,i)=>{const key=v.key||i;elemsByKey[key]?res.push((0,jsx_runtime.jsx)(Provider,{_state:"update",_element:elemsByKey[key]},key)):res.push((0,jsx_runtime.jsx)(Provider,{_state:"exit",_element:v},key))})),elems.forEach(((v,i)=>{const key=v.key||i;prevElemsByKey[key]||res.push((0,jsx_runtime.jsx)(Provider,{_state:"enter",_element:v},key))})),(0,jsx_runtime.jsx)(react.Fragment,{children:res})},createAnimation=(el,keyframes,options)=>{const modifiedOptions={fill:"both",...options};try{return new Animation(new KeyframeEffect(el,keyframes,modifiedOptions))}catch(e){return el.animate(keyframes,modifiedOptions)}},_play=(animation,opts={})=>{animation.playbackRate<0&&"finished"===animation.playState&&_setRate(animation,(p=>-p)),opts.restart&&_setTime(animation,0),animation.play()},_reverse=animation=>{animation&&animation.reverse()},_cancel=animation=>{animation&&animation.cancel()},_finish=animation=>{animation&&animation.finish()},_pause=animation=>{animation&&animation.pause()},_setTime=(animation,arg)=>{animation&&(animation.currentTime="function"==typeof arg?arg(animation.effect.getComputedTiming().endTime):arg)},_setRate=(animation,arg)=>{animation&&animation.updatePlaybackRate("function"==typeof arg?arg(animation.playbackRate):arg)},_waitFor=(animation,name)=>animation?new Promise((resolve=>{animation.onfinish=()=>{("finish"===name&&animation.playbackRate>0||"reverseFinish"===name&&animation.playbackRate<0)&&resolve()}})):Promise.resolve(),useStatic=init=>{const ref=(0,react.useRef)();return ref.current||(ref.current=init())},useIsomorphicLayoutEffect="undefined"!=typeof window?react.useLayoutEffect:react.useEffect,useLatestRef=value=>{const ref=(0,react.useRef)(value);return useIsomorphicLayoutEffect((()=>{ref.current=value}),[value]),ref},animations=new WeakMap,getAnimation=target=>animations.get(target),isEqual=(a,b)=>{return target=a._keyframes,prev=b._keyframes,target.length===prev.length&&target.every(((t,i)=>isSameObject(t,prev[i])))&&isSameObject(a._options,b._options);var target,prev},normalizeKeyframe=(el,keyframe,args)=>{return"function"==typeof keyframe?keyframe(getComputedStyle(el),args):isArray(items=keyframe)?items:[items];var items},useAnimation=(...args)=>{const argsRef=useLatestRef(args),[handle,mount]=useStatic((()=>{let _active,_target=null;const init=args2=>{if(!_target)return;const[keyframe,options]=argsRef.current,prevActive=_active;return((el,target,prevTarget)=>{const animation=prevTarget&&getAnimation(prevTarget);if(animation){if(animations.delete(prevTarget),isEqual(target,prevTarget))return animations.set(target,animation),animation;animation.cancel()}const newAnimation=createAnimation(el,target._keyframes,target._options);return animations.set(target,newAnimation),newAnimation})(_target,_active={_keyframes:normalizeKeyframe(_target,keyframe,args2),_options:options},prevActive)},clean=()=>{var target;_active&&(target=_active,getAnimation(target)?.cancel(),animations.delete(target))},externalHandle=utils_assign((ref=>{(_target=ref)||clean()}),{play:(...opts)=>{const animation=init((opts[0]||{}).args);return animation&&_play(animation),externalHandle},reverse:()=>(_active&&_reverse(getAnimation(_active)),externalHandle),cancel:()=>(_active&&_cancel(getAnimation(_active)),externalHandle),finish:()=>(_active&&_finish(getAnimation(_active)),externalHandle),pause:()=>(_active&&_pause(getAnimation(_active)),externalHandle),setTime:time=>{let animation=_active&&getAnimation(_active);if(!animation){const[keyframe]=argsRef.current;if("function"==typeof keyframe)return externalHandle;animation=init(void 0)}return _setTime(animation,time),externalHandle},setPlaybackRate:rate=>(_active&&_setRate(getAnimation(_active),rate),externalHandle),waitFor:event=>_waitFor(_active&&getAnimation(_active),event).then((()=>externalHandle))});return[externalHandle,()=>clean]}));return(0,react.useEffect)(mount,[]),handle},bindUpdateFunction=(animation,getUpdateFunction,args)=>{const update=()=>{const timing=animation.effect?.getComputedTiming();if(!timing)return;null!=timing.progress&&getUpdateFunction()(timing,args),"running"===animation.playState&&requestAnimationFrame(update)};animation.ready.then(update)},useAnimationFunction=(onUpdate,options)=>{const onUpdateRef=useLatestRef(onUpdate),optionsRef=useLatestRef(options),[handle,cleanup]=useStatic((()=>{const getOnUpdate=()=>onUpdateRef.current;let cache;const initAnimation=(opts={})=>{const options2=optionsRef.current;if(cache){const[prevAnimation,prevOptions]=cache;if(isSameObject(options2,prevOptions))return"running"!==prevAnimation.playState&&bindUpdateFunction(prevAnimation,getOnUpdate,opts.args),prevAnimation;prevAnimation.cancel()}const animation=createAnimation(null,null,options2);return bindUpdateFunction(animation,getOnUpdate,opts.args),cache=[animation,options2],animation},getAnimation=()=>cache?.[0],externalHandle={play:(...opts)=>(_play(initAnimation(opts[0]),opts[0]),externalHandle),reverse:()=>(_reverse(initAnimation()),externalHandle),cancel:()=>(_cancel(getAnimation()),externalHandle),finish:()=>(_finish(getAnimation()),externalHandle),pause:()=>(_pause(getAnimation()),externalHandle),setTime:time=>(_setTime(getAnimation(),time),externalHandle),setPlaybackRate:rate=>(_setRate(getAnimation(),rate),externalHandle),waitFor:event=>_waitFor(getAnimation(),event).then((()=>externalHandle))};return[externalHandle,externalHandle.cancel]}));return(0,react.useEffect)((()=>cleanup),[]),handle},useTransitionAnimation=keyframes=>{const keys=utils_getKeys(keyframes),animations=keys.reduce(((acc,k)=>{const def=keyframes[k];return def?(acc[k]=useAnimation(def[0],def[1]),acc):acc}),{}),animationsRef=useLatestRef(animations),[animation,cleanup]=useStatic((()=>{const forAllHandle=fn=>{utils_getKeys(animationsRef.current).forEach((name=>fn(animationsRef.current[name])))};return[ref=>{forAllHandle((h=>{h(ref)}))},()=>{forAllHandle((handle=>{handle.cancel()}))}]}));(0,react.useEffect)((()=>cleanup),[]);const currentState=(0,react.useContext)(TransitionStateContext),notify=(0,react.useContext)(TransitionNotifierContext);return useIsomorphicLayoutEffect((()=>{keys.includes("exit")?notify(1):notify(0)}),keys),useIsomorphicLayoutEffect((()=>{"update"===currentState&&animationsRef.current[currentState]?.play()})),useIsomorphicLayoutEffect((()=>{"update"!==currentState&&animationsRef.current[currentState]?.play().waitFor("finish").then((()=>{"exit"===currentState&&notify(2)})).catch((()=>{}))}),[currentState]),animation}}}]);