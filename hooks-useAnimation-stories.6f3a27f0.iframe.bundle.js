/*! For license information please see hooks-useAnimation-stories.6f3a27f0.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkreact_animatable=self.webpackChunkreact_animatable||[]).push([[227],{"./stories/hooks/useAnimation.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Bars:()=>Bars,Countdown:()=>Countdown,Mouse:()=>Mouse,Path:()=>Path,Playground:()=>Playground,Sequence:()=>Sequence,ThreeDimentional:()=>ThreeDimentional,Toggle:()=>Toggle,Wave:()=>Wave,__namedExportsOrder:()=>__namedExportsOrder,default:()=>useAnimation_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),useAnimation=__webpack_require__("./src/react/hooks/useAnimation.ts");function o(f){return r=>{f.forEach((n=>{"function"==typeof n?n(r):null!=n&&(n.current=r)}))}}const useAnimation_stories={component:useAnimation.s},Playground={render:()=>{const[duration,setDuration]=(0,react.useState)(1e3),[iteration,setIteration]=(0,react.useState)(2),[direction,setDirection]=(0,react.useState)("alternate"),[easing,setEasing]=(0,react.useState)("cubic-bezier"),[cubicBezierValues,setCubicBezierValues]=(0,react.useState)([.65,0,.35,1]),[stepsValues,setStepsValues]=(0,react.useState)([20,"end"]),[delay,setDelay]=(0,react.useState)(0),[endDelay,setEndDelay]=(0,react.useState)(0),animate=(0,useAnimation.s)([{transform:"translateX(0px)"},{transform:"translateX(100px) scale(2.0)",fill:"red"}],{duration,easing:"cubic-bezier"===easing?`cubic-bezier(${cubicBezierValues.join(",")})`:"steps"===easing?`steps(${stepsValues.join(",")})`:easing,direction,iterations:iteration,delay,endDelay});return(0,react.useEffect)((()=>{animate.play()}),[duration,easing,cubicBezierValues,stepsValues,iteration,direction,delay]),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("svg",{width:600,height:300,viewBox:"0 0 600 300",children:(0,jsx_runtime.jsx)("g",{transform:"translate(100, 100)",children:(0,jsx_runtime.jsx)("g",{ref:animate,fontSize:"24px",fill:"dimgray",children:(0,jsx_runtime.jsx)("text",{children:"Hello world"})})})}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>animate.play(),children:"play"}),(0,jsx_runtime.jsx)("button",{onClick:animate.pause,children:"pause"}),(0,jsx_runtime.jsx)("button",{onClick:animate.reverse,children:"reverse"}),(0,jsx_runtime.jsx)("button",{onClick:animate.finish,children:"finish"})]}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)("label",{children:["duration:",(0,jsx_runtime.jsx)("input",{type:"number",min:0,value:duration,onChange:e=>{setDuration(Number(e.target.value))}}),"ms"]})}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)("label",{children:["iteration:",(0,jsx_runtime.jsx)("input",{type:"number",min:1,value:iteration,onChange:e=>{setIteration(Number(e.target.value))}})]})}),(0,jsx_runtime.jsxs)("div",{children:["easing:",["linear","ease","ease-in","ease-out","ease-in-out"].map((v=>(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"radio",value:v,checked:easing===v,onChange:e=>{setEasing(e.target.value)}}),v]},v))),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"radio",value:"cubic-bezier",checked:0===easing.indexOf("cubic-bezier"),onChange:e=>{setEasing(e.target.value)}}),"cubic-bezier(",cubicBezierValues.map(((v,i)=>(0,jsx_runtime.jsx)("input",{value:v,type:"number",step:.01,min:0,max:1,onChange:e=>{setEasing("cubic-bezier"),setCubicBezierValues((prev=>{const next=[...prev];return next[i]=Number(e.target.value),next}))}},i))).reduce(((acc,v,i)=>(acc.push(v),i!==cubicBezierValues.length-1&&acc.push(","),acc)),[]),")"]}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"radio",value:"steps",checked:0===easing.indexOf("steps"),onChange:e=>{setEasing(e.target.value)}}),"steps(",(0,jsx_runtime.jsx)("input",{type:"number",step:1,min:1,value:stepsValues[0],onChange:e=>{setEasing("steps"),setStepsValues((prev=>[Number(e.target.value),prev[1]]))}}),",",(0,jsx_runtime.jsx)("select",{value:stepsValues[1],onChange:e=>{setEasing("steps"),setStepsValues((prev=>[prev[0],e.target.value]))},children:["jump-start","jump-end","jump-none","jump-both","start","end"].map((v=>(0,jsx_runtime.jsx)("option",{value:v,children:v},v)))}),")"]})]}),(0,jsx_runtime.jsxs)("div",{children:["direction:",["normal","reverse","alternate","alternate-reverse"].map((v=>(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"radio",value:v,checked:direction===v,onChange:e=>{setDirection(e.target.value)}}),v]},v)))]}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)("label",{children:["delay:",(0,jsx_runtime.jsx)("input",{type:"number",min:0,value:delay,onChange:e=>{setDelay(Number(e.target.value))}}),"ms"]})}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)("label",{children:["endDelay:",(0,jsx_runtime.jsx)("input",{type:"number",min:0,value:endDelay,onChange:e=>{setEndDelay(Number(e.target.value))}}),"ms"]})}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)("label",{children:["time:",(0,jsx_runtime.jsx)("input",{type:"range",defaultValue:"0",min:0,max:100,onChange:e=>{animate.setTime((end=>end*(Number(e.target.value)/100)))}})]})}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsxs)("label",{children:["playback rate:",(0,jsx_runtime.jsx)("input",{type:"number",min:-100,max:100,defaultValue:1,onChange:e=>{animate.setPlaybackRate(Number(e.target.value))}})]})})]})}},Bar=({value,i,height,keep})=>{const target={height:`${value}px`,transform:`translateY(-${value}px)`,opacity:String(1-.025*i)},animate=(0,useAnimation.s)(keep?prev=>[{height:prev.height,transform:prev.transform,opacity:prev.opacity},target]:[target],{duration:150,easing:"ease-out",delay:100*i});return(0,react.useEffect)((()=>{animate.play()}),[value,keep]),(0,jsx_runtime.jsx)("rect",{ref:animate,x:20*i,y:height,width:18,height:0,opacity:target.opacity,fill:"steelblue"})},Bars={render:()=>{const init=()=>Array.from({length:30}).map((()=>300*Math.random()**2)),[rects,setRects]=(0,react.useState)(init),[keep,setKeep]=(0,react.useState)(!1),refresh=()=>setRects(init());return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("button",{onClick:refresh,children:"refresh"}),(0,jsx_runtime.jsxs)("label",{children:[(0,jsx_runtime.jsx)("input",{type:"checkbox",checked:keep,onChange:e=>{setKeep(e.target.checked),refresh()}}),"keep"]})]}),(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)("svg",{width:800,height:400,children:(0,jsx_runtime.jsx)("g",{transform:"translate(10,10)",children:rects.map(((v,i)=>(0,jsx_runtime.jsx)(Bar,{i,value:v,height:380,keep},i)))})})})]})}},Mouse={render:()=>{const rotate=(0,useAnimation.s)([{transform:"rotate(0deg)",borderRadius:"1rem"},{transform:"rotate(360deg)",borderRadius:"50%"},{transform:"rotate(720deg)",borderRadius:"1rem"}],{duration:1e3,iterations:1/0,easing:"ease-in-out"}),move=(0,useAnimation.s)(((prev,pos)=>[{transform:prev.transform},{transform:`translate(${pos.x}px, ${pos.y}px)`}]),{duration:400,easing:"ease-in-out"});return(0,react.useEffect)((()=>{rotate.play();const onPointerMove=((fn,ms)=>{let id=null;return(...args)=>{null!=id&&clearTimeout(id),id=setTimeout((()=>{id=null,fn(...args)}),ms)}})((e=>{move.play({args:{x:e.clientX,y:e.clientY}})}),100);return window.addEventListener("pointermove",onPointerMove),()=>{window.removeEventListener("pointermove",onPointerMove)}}),[]),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("div",{children:"Move mouse cursor."}),(0,jsx_runtime.jsx)("div",{ref:move,children:(0,jsx_runtime.jsx)("div",{ref:rotate,style:{position:"fixed",border:"solid 0.1rem #135569",height:"6rem",width:"6rem",top:"-3rem",left:"-3rem"}})})]})}},Toggle={render:()=>{const animate=(0,useAnimation.s)({transform:"translate3d(400px, 0, 0)"},{duration:800,easing:"ease-in-out"});return(0,react.useEffect)((()=>{animate.play()}),[animate]),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("button",{onClick:animate.reverse,children:"Toggle"}),(0,jsx_runtime.jsx)("div",{className:"rail",children:(0,jsx_runtime.jsx)("div",{ref:animate,className:"block"})}),(0,jsx_runtime.jsx)("style",{children:"\n.rail {\n  border-radius: 4px;\n  background-color: rgb(240, 240, 232);\n  position: relative;\n  margin: 5px 3px 10px;\n  width: 450px;\n  height: 50px;\n}\n.block {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  border-radius: 4px;\n  background-color: rgb(130, 181, 198);\n}\n"})]})}},Path={render:()=>{const animate=(0,useAnimation.s)([{d:"path('M50,50L150,50L150,150L50,150z')"},{d:"path('M100,30L170,170L30,170L30,170z')"}],{duration:1e3,easing:"ease-in-out",iterations:1/0,direction:"alternate"});(0,react.useEffect)((()=>{animate.play()}),[]);return(0,jsx_runtime.jsx)("svg",{width:400,height:300,viewBox:"0 0 400 300",children:(0,jsx_runtime.jsx)("path",{ref:animate,fill:"orange"})})}},ThreeDimentional={render:()=>{const[pos,setPos]=(0,react.useState)({x:1,y:1}),animate=(0,useAnimation.s)({transform:`rotate3d(${pos.y/100}, ${pos.x/100}, 0, 360deg)`},{duration:1e3,iterations:1/0});return(0,react.useEffect)((()=>{animate.play()}),[pos]),(0,react.useEffect)((()=>{const onPointerMove=e=>{setPos({x:e.clientX,y:e.clientY})};return window.addEventListener("pointermove",onPointerMove),()=>{window.removeEventListener("pointermove",onPointerMove)}}),[]),(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{ref:animate,style:{width:100,height:100,margin:100,transformStyle:"preserve-3d"},children:[(0,jsx_runtime.jsx)("div",{className:"face front"}),(0,jsx_runtime.jsx)("div",{className:"face back"}),(0,jsx_runtime.jsx)("div",{className:"face right"}),(0,jsx_runtime.jsx)("div",{className:"face left"}),(0,jsx_runtime.jsx)("div",{className:"face top"}),(0,jsx_runtime.jsx)("div",{className:"face bottom"})]}),(0,jsx_runtime.jsx)("style",{children:"\n            .face {\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              width: 100%;\n              height: 100%;\n              position: absolute;\n              backface-visibility: inherit;\n              font-size: 60px;\n              color: #fff;\n            }\n            .front {\n              background: rgba(90,90,90,.7);\n              transform: translateZ(50px);\n            }\n            .back {\n              background: rgba(0,210,0,.7);\n              transform: rotateY(180deg) translateZ(50px);\n            }\n            .right {\n              background: rgba(210,0,0,.7);\n              transform: rotateY(90deg) translateZ(50px);\n            }\n            .left {\n              background: rgba(0,0,210,.7);\n              transform: rotateY(-90deg) translateZ(50px);\n            }\n            .top {\n              background: rgba(210,210,0,.7);\n              transform: rotateX(90deg) translateZ(50px);\n            }\n            .bottom {\n              background: rgba(210,0,210,.7);\n              transform: rotateX(-90deg) translateZ(50px);\n            }\n            "})]})},name:"3D"},Sequence={render:()=>{const animate=(0,useAnimation.s)(((prev,color)=>[{fill:prev.fill},{fill:color}]),{duration:600,easing:"ease-out"}),onClickAll=(0,react.useCallback)((async()=>{try{await animate.play({args:"red"}).waitFor("finish"),await animate.play({args:"blue"}).waitFor("finish"),await animate.play({args:"green"}).waitFor("finish")}catch(e){}}),[]);return(0,react.useEffect)((()=>{onClickAll()}),[]),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("svg",{width:150,height:150,children:(0,jsx_runtime.jsx)("path",{ref:animate,d:"M 10,30 A 20,20 0,0,1 50,30 A 20,20 0,0,1 90,30 Q 90,60 50,90 Q 10,60 10,30 z"})}),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)("button",{onClick:()=>{animate.play({args:"red"})},children:"Red"}),(0,jsx_runtime.jsx)("button",{onClick:()=>{animate.play({args:"blue"})},children:"Blue"}),(0,jsx_runtime.jsx)("button",{onClick:()=>{animate.play({args:"green"})},children:"Green"}),(0,jsx_runtime.jsx)("button",{onClick:onClickAll,children:"All"})]})]})}},WavedRect=({i})=>{const baseTiming={easing:"ease-in-out",iterations:1/0,direction:"alternate",delay:98*i},move=(0,useAnimation.s)([{transform:"translateY(0) scaleX(.8)"},{transform:"translateY(95vh) scaleX(1)"}],{...baseTiming,duration:2500}),opacity=(0,useAnimation.s)([{opacity:1},{opacity:0}],{...baseTiming,duration:2e3}),color=(0,useAnimation.s)([{backgroundColor:"rgb(239, 239, 255)"},{backgroundColor:"#e4c349"}],{...baseTiming,duration:3e3});return(0,react.useEffect)((()=>{move.play(),opacity.play(),color.play()}),[]),(0,jsx_runtime.jsx)("div",{ref:o([move,opacity,color]),style:{width:"5vw",height:"2.5vh",background:"#efefff",borderRadius:"1vh"}})},Wave={render:()=>{const[rects]=(0,react.useState)((()=>Array.from({length:20}).map(((_,i)=>i))));return(0,jsx_runtime.jsx)("div",{style:{background:"#e45349",width:"100vw",height:"100vh",display:"flex",justifyContent:"center"},children:rects.map((i=>(0,jsx_runtime.jsx)(WavedRect,{i},i)))})}},Countdown={render:()=>{const[count,setCount]=(0,react.useState)(10),countAnimation=(0,useAnimation.s)([{opacity:1,transform:"scale(.6)"},{opacity:.5,transform:"scale(1)"}],{duration:500,easing:"linear",delay:0,iterations:1e3,direction:"alternate"}),boomAnimation=(0,useAnimation.s)([{opacity:0,transform:"scale(.01) rotate(0deg)",color:"white",offset:0},{opacity:1,transform:"scale(6) rotate(360deg)",color:"orange",offset:.8},{opacity:1,transform:"scale(1) rotate(720deg)",color:"white",offset:1}],{duration:2e3,easing:"ease-out",delay:0,iterations:1});return(0,react.useEffect)((()=>{countAnimation.play();let startCount=count;const id=setInterval((()=>{startCount-=1,setCount((p=>p-1)),startCount>0?countAnimation.setPlaybackRate((prev=>Math.min(1.15*prev,6))):(clearInterval(id),boomAnimation.play())}),1e3);return()=>{clearInterval(id)}}),[]),(0,jsx_runtime.jsx)("div",{style:{background:"gray",width:400,height:400,display:"flex",alignItems:"center",justifyContent:"center"},children:(0,jsx_runtime.jsx)("span",{ref:o([countAnimation,boomAnimation]),style:{color:"white",fontSize:64,fontWeight:"bold"},children:count})})}},__namedExportsOrder=["Playground","Bars","Mouse","Toggle","Path","ThreeDimentional","Sequence","Wave","Countdown"];Playground.parameters={...Playground.parameters,docs:{...Playground.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [duration, setDuration] = useState(1000);\n    const [iteration, setIteration] = useState(2);\n    const [direction, setDirection] = useState<PlaybackDirection>("alternate");\n    const [easing, setEasing] = useState<TypedEasing>("cubic-bezier");\n    const [cubicBezierValues, setCubicBezierValues] = useState<[number, number, number, number]>([0.65, 0, 0.35, 1]);\n    const [stepsValues, setStepsValues] = useState<[number, string]>([20, "end"]);\n    const [delay, setDelay] = useState(0);\n    const [endDelay, setEndDelay] = useState(0);\n    const animate = useAnimation([{\n      transform: "translateX(0px)"\n    }, {\n      transform: "translateX(100px) scale(2.0)",\n      fill: "red"\n    }], {\n      duration: duration,\n      easing: easing === "cubic-bezier" ? `cubic-bezier(${cubicBezierValues.join(",")})` : easing === "steps" ? `steps(${stepsValues.join(",")})` : easing,\n      direction: direction,\n      iterations: iteration,\n      delay,\n      endDelay\n    });\n    useEffect(() => {\n      animate.play();\n    }, [duration, easing, cubicBezierValues, stepsValues, iteration, direction, delay]);\n    return <div>\n        <svg width={600} height={300} viewBox="0 0 600 300">\n          <g transform="translate(100, 100)">\n            <g ref={animate} fontSize="24px" fill="dimgray">\n              <text>Hello world</text>\n            </g>\n          </g>\n        </svg>\n        <div>\n          <button onClick={() => animate.play()}>play</button>\n          <button onClick={animate.pause}>pause</button>\n          <button onClick={animate.reverse}>reverse</button>\n          <button onClick={animate.finish}>finish</button>\n        </div>\n        <div>\n          <label>\n            duration:\n            <input type="number" min={0} value={duration} onChange={e => {\n            setDuration(Number(e.target.value));\n          }} />\n            ms\n          </label>\n        </div>\n        <div>\n          <label>\n            iteration:\n            <input type="number" min={1} value={iteration} onChange={e => {\n            setIteration(Number(e.target.value));\n          }} />\n          </label>\n        </div>\n        <div>\n          easing:\n          {["linear", "ease", "ease-in", "ease-out", "ease-in-out"].map(v => <label key={v}>\n              <input type="radio" value={v} checked={easing === v} onChange={e => {\n            setEasing(e.target.value as TypedEasing);\n          }} />\n              {v}\n            </label>)}\n          <label>\n            <input type="radio" value="cubic-bezier" checked={easing.indexOf("cubic-bezier") === 0} onChange={e => {\n            setEasing(e.target.value as TypedEasing);\n          }} />\n            cubic-bezier(\n            {cubicBezierValues.map((v, i) => <input key={i} value={v} type="number" step={0.01} min={0} max={1} onChange={e => {\n            setEasing("cubic-bezier");\n            setCubicBezierValues(prev => {\n              const next: [number, number, number, number] = [...prev];\n              next[i] = Number(e.target.value);\n              return next;\n            });\n          }} />).reduce((acc, v, i) => {\n            acc.push(v);\n            if (i !== cubicBezierValues.length - 1) {\n              acc.push(",");\n            }\n            return acc;\n          }, [] as React.ReactNode[])}\n            )\n          </label>\n          <label>\n            <input type="radio" value="steps" checked={easing.indexOf("steps") === 0} onChange={e => {\n            setEasing(e.target.value as TypedEasing);\n          }} />\n            steps(\n            {<input type="number" step={1} min={1} value={stepsValues[0]} onChange={e => {\n            setEasing("steps");\n            setStepsValues(prev => [Number(e.target.value), prev[1]]);\n          }} />}\n            ,\n            <select value={stepsValues[1]} onChange={e => {\n            setEasing("steps");\n            setStepsValues(prev => [prev[0], e.target.value]);\n          }}>\n              {["jump-start", "jump-end", "jump-none", "jump-both", "start", "end"].map(v => <option key={v} value={v}>\n                  {v}\n                </option>)}\n            </select>\n            )\n          </label>\n        </div>\n        <div>\n          direction:\n          {["normal", "reverse", "alternate", "alternate-reverse"].map(v => <label key={v}>\n              <input type="radio" value={v} checked={direction === v} onChange={e => {\n            setDirection(e.target.value as PlaybackDirection);\n          }} />\n              {v}\n            </label>)}\n        </div>\n        <div>\n          <label>\n            delay:\n            <input type="number" min={0} value={delay} onChange={e => {\n            setDelay(Number(e.target.value));\n          }} />\n            ms\n          </label>\n        </div>\n        <div>\n          <label>\n            endDelay:\n            <input type="number" min={0} value={endDelay} onChange={e => {\n            setEndDelay(Number(e.target.value));\n          }} />\n            ms\n          </label>\n        </div>\n        <div>\n          <label>\n            time:\n            <input type="range" defaultValue="0" min={0} max={100} onChange={e => {\n            animate.setTime(end => end * (Number(e.target.value) / 100));\n          }} />\n          </label>\n        </div>\n        <div>\n          <label>\n            playback rate:\n            <input type="number" min={-100} max={100} defaultValue={1} onChange={e => {\n            animate.setPlaybackRate(Number(e.target.value));\n          }} />\n          </label>\n        </div>\n      </div>;\n  }\n}',...Playground.parameters?.docs?.source}}},Bars.parameters={...Bars.parameters,docs:{...Bars.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const init = () => Array.from({\n      length: 30\n    }).map(() => 300 * Math.random() ** 2);\n    const [rects, setRects] = useState(init);\n    const [keep, setKeep] = useState(false);\n    const width = 800;\n    const height = 400;\n    const margin = 10;\n    const maxBarHeight = height - margin * 2;\n    const refresh = () => setRects(init());\n    return <>\n        <div>\n          <button onClick={refresh}>refresh</button>\n          <label>\n            <input type="checkbox" checked={keep} onChange={e => {\n            setKeep(e.target.checked);\n            refresh();\n          }} />\n            keep\n          </label>\n        </div>\n        <div>\n          <svg width={width} height={height}>\n            <g transform={`translate(${margin},${margin})`}>\n              {rects.map((v, i) => <Bar key={i} i={i} value={v} height={maxBarHeight} keep={keep} />)}\n            </g>\n          </svg>\n        </div>\n      </>;\n  }\n}',...Bars.parameters?.docs?.source}}},Mouse.parameters={...Mouse.parameters,docs:{...Mouse.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const rotate = useAnimation([{\n      transform: "rotate(0deg)",\n      borderRadius: "1rem"\n    }, {\n      transform: "rotate(360deg)",\n      borderRadius: "50%"\n    }, {\n      transform: "rotate(720deg)",\n      borderRadius: "1rem"\n    }], {\n      duration: 1000,\n      iterations: Infinity,\n      easing: "ease-in-out"\n    });\n    const move = useAnimation<{\n      x: number;\n      y: number;\n    }>((prev, pos) => [{\n      transform: prev.transform\n    }, {\n      transform: `translate(${pos.x}px, ${pos.y}px)`\n    }], {\n      duration: 400,\n      easing: "ease-in-out"\n    });\n    useEffect(() => {\n      rotate.play();\n      const onPointerMove = debounce((e: PointerEvent) => {\n        move.play({\n          args: {\n            x: e.clientX,\n            y: e.clientY\n          }\n        });\n      }, 100);\n      window.addEventListener("pointermove", onPointerMove);\n      return () => {\n        window.removeEventListener("pointermove", onPointerMove);\n      };\n    }, []);\n    return <div>\n        <div>Move mouse cursor.</div>\n        <div ref={move}>\n          <div ref={rotate} style={{\n          position: "fixed",\n          border: "solid 0.1rem #135569",\n          height: "6rem",\n          width: "6rem",\n          top: "-3rem",\n          left: "-3rem"\n        }} />\n        </div>\n      </div>;\n  }\n}',...Mouse.parameters?.docs?.source}}},Toggle.parameters={...Toggle.parameters,docs:{...Toggle.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const animate = useAnimation({\n      transform: "translate3d(400px, 0, 0)"\n    }, {\n      duration: 800,\n      easing: "ease-in-out"\n    });\n    useEffect(() => {\n      animate.play();\n    }, [animate]);\n    return <div>\n        <button onClick={animate.reverse}>Toggle</button>\n        <div className="rail">\n          <div ref={animate} className="block" />\n        </div>\n        <style>\n          {`\n.rail {\n  border-radius: 4px;\n  background-color: rgb(240, 240, 232);\n  position: relative;\n  margin: 5px 3px 10px;\n  width: 450px;\n  height: 50px;\n}\n.block {\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  border-radius: 4px;\n  background-color: rgb(130, 181, 198);\n}\n`}\n        </style>\n      </div>;\n  }\n}',...Toggle.parameters?.docs?.source}}},Path.parameters={...Path.parameters,docs:{...Path.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const animate = useAnimation([{\n      d: "path(\'M50,50L150,50L150,150L50,150z\')"\n    }, {\n      d: "path(\'M100,30L170,170L30,170L30,170z\')"\n    }], {\n      duration: 1000,\n      easing: "ease-in-out",\n      iterations: Infinity,\n      direction: "alternate"\n    });\n    useEffect(() => {\n      animate.play();\n    }, []);\n    const width = 400;\n    const height = 300;\n    return <svg width={width} height={height} viewBox={`0 0 ${width} ${height}`}>\n        <path ref={animate} fill="orange" />\n      </svg>;\n  }\n}',...Path.parameters?.docs?.source}}},ThreeDimentional.parameters={...ThreeDimentional.parameters,docs:{...ThreeDimentional.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [pos, setPos] = useState({\n      x: 1,\n      y: 1\n    });\n    const animate = useAnimation({\n      transform: `rotate3d(${pos.y / 100}, ${pos.x / 100}, 0, 360deg)`\n    }, {\n      duration: 1000,\n      iterations: Infinity\n    });\n    useEffect(() => {\n      animate.play();\n    }, [pos]);\n    useEffect(() => {\n      const onPointerMove = (e: PointerEvent) => {\n        setPos({\n          x: e.clientX,\n          y: e.clientY\n        });\n      };\n      window.addEventListener("pointermove", onPointerMove);\n      return () => {\n        window.removeEventListener("pointermove", onPointerMove);\n      };\n    }, []);\n    return <>\n        <div ref={animate} style={{\n        width: 100,\n        height: 100,\n        margin: 100,\n        transformStyle: "preserve-3d"\n      }}>\n          <div className="face front" />\n          <div className="face back" />\n          <div className="face right" />\n          <div className="face left" />\n          <div className="face top" />\n          <div className="face bottom" />\n        </div>\n        <style>\n          {`\n            .face {\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              width: 100%;\n              height: 100%;\n              position: absolute;\n              backface-visibility: inherit;\n              font-size: 60px;\n              color: #fff;\n            }\n            .front {\n              background: rgba(90,90,90,.7);\n              transform: translateZ(50px);\n            }\n            .back {\n              background: rgba(0,210,0,.7);\n              transform: rotateY(180deg) translateZ(50px);\n            }\n            .right {\n              background: rgba(210,0,0,.7);\n              transform: rotateY(90deg) translateZ(50px);\n            }\n            .left {\n              background: rgba(0,0,210,.7);\n              transform: rotateY(-90deg) translateZ(50px);\n            }\n            .top {\n              background: rgba(210,210,0,.7);\n              transform: rotateX(90deg) translateZ(50px);\n            }\n            .bottom {\n              background: rgba(210,0,210,.7);\n              transform: rotateX(-90deg) translateZ(50px);\n            }\n            `}\n        </style>\n      </>;\n  },\n  name: "3D"\n}',...ThreeDimentional.parameters?.docs?.source}}},Sequence.parameters={...Sequence.parameters,docs:{...Sequence.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const animate = useAnimation<string>((prev, color) => [{\n      fill: prev.fill\n    }, {\n      fill: color\n    }], {\n      duration: 600,\n      easing: "ease-out"\n    });\n    const onClickAll = useCallback(async () => {\n      try {\n        await animate.play({\n          args: "red"\n        }).waitFor("finish");\n        await animate.play({\n          args: "blue"\n        }).waitFor("finish");\n        await animate.play({\n          args: "green"\n        }).waitFor("finish");\n      } catch (e) {\n        // ignore uncaught promise error\n      }\n    }, []);\n    useEffect(() => {\n      onClickAll();\n    }, []);\n    return <div>\n        <svg width={150} height={150}>\n          <path ref={animate} d="M 10,30 A 20,20 0,0,1 50,30 A 20,20 0,0,1 90,30 Q 90,60 50,90 Q 10,60 10,30 z" />\n        </svg>\n        <div>\n          <button onClick={() => {\n          animate.play({\n            args: "red"\n          });\n        }}>\n            Red\n          </button>\n          <button onClick={() => {\n          animate.play({\n            args: "blue"\n          });\n        }}>\n            Blue\n          </button>\n          <button onClick={() => {\n          animate.play({\n            args: "green"\n          });\n        }}>\n            Green\n          </button>\n          <button onClick={onClickAll}>All</button>\n        </div>\n      </div>;\n  }\n}',...Sequence.parameters?.docs?.source}}},Wave.parameters={...Wave.parameters,docs:{...Wave.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [rects] = useState(() => Array.from({\n      length: 20\n    }).map((_, i) => i));\n    return <div style={{\n      background: "#e45349",\n      width: "100vw",\n      height: "100vh",\n      display: "flex",\n      justifyContent: "center"\n    }}>\n        {rects.map(i => <WavedRect key={i} i={i} />)}\n      </div>;\n  }\n}',...Wave.parameters?.docs?.source}}},Countdown.parameters={...Countdown.parameters,docs:{...Countdown.parameters?.docs,source:{originalSource:'{\n  render: () => {\n    const [count, setCount] = useState(10);\n    const countAnimation = useAnimation([{\n      opacity: 1,\n      transform: "scale(.6)"\n    }, {\n      opacity: 0.5,\n      transform: "scale(1)"\n    }], {\n      duration: 500,\n      easing: "linear",\n      delay: 0,\n      iterations: 1000,\n      direction: "alternate"\n    });\n    const boomAnimation = useAnimation([{\n      opacity: 0,\n      transform: "scale(.01) rotate(0deg)",\n      color: "white",\n      offset: 0\n    }, {\n      opacity: 1,\n      transform: "scale(6) rotate(360deg)",\n      color: "orange",\n      offset: 0.8\n    }, {\n      opacity: 1,\n      transform: "scale(1) rotate(720deg)",\n      color: "white",\n      offset: 1\n    }], {\n      duration: 2000,\n      easing: "ease-out",\n      delay: 0,\n      iterations: 1\n    });\n    useEffect(() => {\n      countAnimation.play();\n      let startCount = count;\n      const id = setInterval(() => {\n        startCount -= 1;\n        setCount(p => p - 1);\n        if (startCount > 0) {\n          countAnimation.setPlaybackRate(prev => Math.min(prev * 1.15, 6));\n        } else {\n          clearInterval(id);\n          boomAnimation.play();\n        }\n      }, 1000);\n      return () => {\n        clearInterval(id);\n      };\n    }, []);\n    return <div style={{\n      background: "gray",\n      width: 400,\n      height: 400,\n      display: "flex",\n      alignItems: "center",\n      justifyContent: "center"\n    }}>\n        <span ref={mergeRefs([countAnimation, boomAnimation])} style={{\n        color: "white",\n        fontSize: 64,\n        fontWeight: "bold"\n      }}>\n          {count}\n        </span>\n      </div>;\n  }\n}',...Countdown.parameters?.docs?.source}}}},"./node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/react/cjs/react-jsx-runtime.production.min.js")},"./src/core/utils.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$r:()=>toArray,Gy:()=>isSameObject,gd:()=>getStyle,kp:()=>assign,lQ:()=>noop,xD:()=>getKeys,zD:()=>isSameObjectArray});const noop=()=>{},getKeys=Object.keys,assign=Object.assign,isArray=Array.isArray,getStyle=e=>getComputedStyle(e),isSameObject=(target={},prev={})=>{const keys=getKeys(target);return keys.length===getKeys(prev).length&&keys.every((k=>target[k]===prev[k]))},isSameObjectArray=(target,prev)=>target.length===prev.length&&target.every(((t,i)=>isSameObject(t,prev[i]))),toArray=items=>isArray(items)?items:[items]},"./src/core/waapi.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Gi:()=>_play,JI:()=>createAnimation,Ow:()=>_setRate,QK:()=>_waitFor,Yv:()=>_reverse,d8:()=>_finish,gJ:()=>_pause,nG:()=>_setTime,yw:()=>_cancel});const createAnimation=(el,keyframes,options,timeline)=>{const modifiedOptions={fill:"both",...options};try{return new Animation(new KeyframeEffect(el,keyframes,modifiedOptions),timeline)}catch(e){return el.animate(keyframes,modifiedOptions)}},_play=(animation,opts={})=>{animation.playbackRate<0&&"finished"===animation.playState&&_setRate(animation,(p=>-p)),opts.restart&&_setTime(animation,0),animation.play()},_reverse=animation=>{animation&&animation.reverse()},_cancel=animation=>{animation&&animation.cancel()},_finish=animation=>{animation&&animation.finish()},_pause=animation=>{animation&&animation.pause()},_setTime=(animation,arg)=>{animation&&(animation.currentTime="function"==typeof arg?arg(animation.effect.getComputedTiming().endTime):arg)},_setRate=(animation,arg)=>{animation&&animation.updatePlaybackRate("function"==typeof arg?arg(animation.playbackRate):arg)},_waitFor=(animation,name)=>animation?new Promise((resolve=>{animation.onfinish=()=>{("finish"===name&&animation.playbackRate>0||"reverseFinish"===name&&animation.playbackRate<0)&&resolve()}})):Promise.resolve()},"./src/react/hooks/useAnimation.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>useAnimation});var react=__webpack_require__("./node_modules/react/index.js"),utils=__webpack_require__("./src/core/utils.ts"),waapi=__webpack_require__("./src/core/waapi.ts"),useStatic=__webpack_require__("./src/react/hooks/useStatic.ts"),useLatestRef=__webpack_require__("./src/react/hooks/useLatestRef.ts");const animations=new WeakMap,getAnimation=target=>animations.get(target),initAnimation=(el,target,prevTarget)=>{const prevAnimation=prevTarget&&getAnimation(prevTarget);if(prevAnimation){if(animations.delete(prevTarget),a=target,b=prevTarget,(0,utils.zD)(a._keyframes,b._keyframes)&&(0,utils.Gy)(a._options,b._options))return animations.set(target,prevAnimation),prevAnimation;prevAnimation.cancel()}var a,b;const animation=(0,waapi.JI)(el,target._keyframes,target._options,target._timeline);return animations.set(target,animation),animation},normalizeKeyframe=(el,keyframe,args)=>"function"==typeof keyframe?keyframe((0,utils.gd)(el),args):(0,utils.$r)(keyframe),useAnimation=(...args)=>{const argsRef=(0,useLatestRef.S)(args),[handle,mount]=(0,useStatic.C)((()=>{let _active,_target=null;const init=args=>{if(!_target)return;const[keyframe,_options={}]=argsRef.current,{timeline,...options}=_options,prevActive=_active;return initAnimation(_target,_active={_keyframes:normalizeKeyframe(_target,keyframe,args),_options:options,_timeline:timeline?._get()},prevActive)},clean=()=>{var target;_active&&(target=_active,getAnimation(target)?.cancel(),animations.delete(target))},externalHandle=(0,utils.kp)((ref=>{(_target=ref)||clean()}),{play:(...opts)=>{const animation=init((opts[0]||{}).args);return animation&&(0,waapi.Gi)(animation),externalHandle},reverse:()=>(_active&&(0,waapi.Yv)(getAnimation(_active)),externalHandle),cancel:()=>(_active&&(0,waapi.yw)(getAnimation(_active)),externalHandle),finish:()=>(_active&&(0,waapi.d8)(getAnimation(_active)),externalHandle),pause:()=>(_active&&(0,waapi.gJ)(getAnimation(_active)),externalHandle),setTime:time=>{let animation=_active&&getAnimation(_active);if(!animation){const[keyframe]=argsRef.current;if("function"==typeof keyframe)return externalHandle;animation=init(void 0)}return(0,waapi.nG)(animation,time),externalHandle},setPlaybackRate:rate=>(_active&&(0,waapi.Ow)(getAnimation(_active),rate),externalHandle),waitFor:event=>(0,waapi.QK)(_active&&getAnimation(_active),event).then((()=>externalHandle))});return[externalHandle,()=>clean]}));return(0,react.useEffect)(mount,[]),handle}},"./src/react/hooks/useIsomorphicLayoutEffect.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{E:()=>useIsomorphicLayoutEffect});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const useIsomorphicLayoutEffect="undefined"!=typeof window?react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect:react__WEBPACK_IMPORTED_MODULE_0__.useEffect},"./src/react/hooks/useLatestRef.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>useLatestRef});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/react/hooks/useIsomorphicLayoutEffect.ts");const useLatestRef=value=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(value);return(0,_useIsomorphicLayoutEffect__WEBPACK_IMPORTED_MODULE_1__.E)((()=>{ref.current=value}),[value]),ref}},"./src/react/hooks/useStatic.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{C:()=>useStatic});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const useStatic=init=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();return ref.current||(ref.current=init())}}}]);