import{r}from"./iframe-CLym-1vj.js";const h=()=>{},o=Object.keys,b=Object.assign,a=Array.isArray,d=e=>getComputedStyle(e),f=(e={},t={})=>{const s=o(e);return s.length!==o(t).length?!1:s.every(c=>e[c]===t[c])},R=(e,t)=>e.length!==t.length?!1:e.every((s,c)=>f(s,t[c])),_=e=>a(e)?e:[e],A=(e,t,s,c)=>{const n={fill:"both",...s};try{return new Animation(new KeyframeEffect(e,t,n),c)}catch{return e.animate(t,n)}},g=(e,t={})=>{e.playbackRate<0&&e.playState==="finished"&&i(e,s=>-s),t.restart&&u(e,0),e.play()},k=e=>{e.reverse()},m=e=>{e.cancel()},w=e=>{e.finish()},S=e=>{e.pause()},u=(e,t)=>{e.currentTime=typeof t=="function"?t(e.effect.getComputedTiming().endTime):t},i=(e,t)=>{e.updatePlaybackRate(typeof t=="function"?t(e.playbackRate):t)},j=(e,t)=>e?new Promise(s=>{e.onfinish=()=>{(t==="finish"&&e.playbackRate>0||t==="reverseFinish"&&e.playbackRate<0)&&s()}}):Promise.resolve(),E=e=>{const t=r.useRef();return t.current||(t.current=e())},y=typeof window<"u"?r.useLayoutEffect:r.useEffect,O=e=>{const t=r.useRef(e);return y(()=>{t.current=e},[e]),t};export{j as _,E as a,k as b,g as c,A as d,i as e,u as f,S as g,w as h,f as i,m as j,b as k,o as l,y as m,h as n,R as o,d as p,_ as t,O as u};
